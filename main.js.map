{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/device/device.component.ts","./src/app/device/device.component.html","./src/app/device/device.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kenny-test';\n}\n","<h1>{{title}}</h1>\n<app-device></app-device>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common'\n\n\nimport { AppComponent } from './app.component';\nimport { DeviceComponent } from './device/device.component';\n\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\n\nimport { TableModule } from 'primeng/table';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DeviceComponent\n  ],\n  imports: [\n    HttpClientModule,\n    HttpClientJsonpModule,\n    BrowserModule,\n    CommonModule,\n    TableModule,\n    ButtonModule,\n    FormsModule,\n    InputTextModule,\n    DropdownModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DatePipe } from '@angular/common'\n\nimport { Device } from './device';\nimport { DeviceService } from './device.service';\n\nimport { MessageService, SelectItem } from 'primeng/api';\n\n@Component({\n  selector: 'app-device',\n  templateUrl: './device.component.html',\n  styleUrls: ['./device.component.css'],\n  providers: [DatePipe,MessageService],\n  styles: [`\n    .p-cell-editing {\n      padding-top: 0 !important;\n      padding-bottom: 0 !important;\n    }\n  `]\n})\nexport class DeviceComponent implements OnInit {\n\n  devices: Device[];\n\n  headers: any[];\n\n  status: SelectItem[];\n\n  checked: boolean = true;\n\n  clonedProducts: { [s: string]: Device; } = {};\n\n  constructor(private deviceService: DeviceService, private messageService: MessageService, private datePipe: DatePipe) { }\n\n  ngOnInit(): void {\n    this.getDevices();\n    this.status = [{label: 'Y', value: true}, {label: 'N', value: false}];\n    this.headers = [\n      { field: 'id', header: 'id' },\n      { field: 'serialNumber', header: 'serialNumber' },\n      { field: 'equipmentNumber', header: 'equipmentNumber' },\n      { field: 'type', header: 'type' },\n      { field: 'lend', header: 'lend' },\n      { field: 'owner', header: 'owner' },\n      { field: 'lender', header: 'lender' },\n      { field: 'createDate', header: 'createDate' },\n      { field: 'updateDate', header: 'updateDate' }\n    ];\n  }\n\n  getDevices(): void {\n    // this.deviceService.getDevices().subscribe(devices => this.devices = devices);\n  }\n\n  onRowEditInit(device: Device) {\n    this.clonedProducts = {};\n    this.clonedProducts[device.id] = {...device};\n  }\n\n  onRowEditSave(device: Device) {\n    delete this.clonedProducts[device.id];\n    // this.deviceService.updateDevice(device).subscribe();\n    this.messageService.add({severity:'success', summary: 'Success', detail:'Product is updated'});\n  }\n\n  onRowEditCancel(device: Device, index: number) {\n      this.devices[index] = this.clonedProducts[device.id];\n      delete this.clonedProducts[device.id];\n  }\n\n\n}\n","<p-table [columns]=\"headers\" [value]=\"devices\" dataKey=\"id\" editMode=\"row\" [resizableColumns]=\"true\">\n  <ng-template pTemplate=\"header\" let-columns>\n      <tr>\n          <th *ngFor=\"let col of columns\">\n              {{col.header}}\n          </th>\n          <th style=\"width:8rem;\"></th>\n      </tr>\n  </ng-template>\n  <!--<ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">-->\n  <ng-template pTemplate=\"body\" let-device let-editing=\"editing\" let-ri=\"rowIndex\">\n      <tr [pEditableRow]=\"device\">\n        <!--\n          <td *ngFor=\"let col of columns\">\n              {{rowData[col.field]}}\n          </td>\n        -->\n        <td>{{device.id}}</td>\n        <td>\n            <p-cellEditor>\n                <ng-template pTemplate=\"input\">\n                    <input pInputText type=\"text\" [(ngModel)]=\"device.serialNumber\" [style]=\"{'width':'100%'}\">\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                    {{device.serialNumber}}\n                </ng-template>\n            </p-cellEditor>\n        </td>\n        <td>\n            <p-cellEditor>\n                <ng-template pTemplate=\"input\">\n                    <input pInputText type=\"text\" [(ngModel)]=\"device.equipmentNumber\" [style]=\"{'width':'100%'}\">\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                    {{device.equipmentNumber}}\n                </ng-template>\n            </p-cellEditor>\n        </td>\n        <td>\n            <p-cellEditor>\n                <ng-template pTemplate=\"input\">\n                    <input pInputText type=\"text\" [(ngModel)]=\"device.type\" [style]=\"{'width':'100%'}\">\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                    {{device.type}}\n                </ng-template>\n            </p-cellEditor>\n        </td>\n        <td>\n            <p-cellEditor>\n                <ng-template pTemplate=\"input\">\n                    <input type=\"checkbox\" [(ngModel)]=\"device.lend\" [style]=\"{'width':'100%'}\">\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                    <input type=\"checkbox\" [(ngModel)]=\"device.lend\" disabled=\"true\">\n                </ng-template>\n            </p-cellEditor>\n        </td>\n        <td>\n            <p-cellEditor>\n                <ng-template pTemplate=\"input\">\n                    <input pInputText type=\"text\" [(ngModel)]=\"device.owner\" [style]=\"{'width':'100%'}\">\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                    {{device.owner}}\n                </ng-template>\n            </p-cellEditor>\n        </td>\n        <td>\n            <p-cellEditor>\n                <ng-template pTemplate=\"input\">\n                    <input pInputText type=\"text\" [(ngModel)]=\"device.lender\" [style]=\"{'width':'100%'}\">\n                </ng-template>\n                <ng-template pTemplate=\"output\">\n                    {{device.lender}}\n                </ng-template>\n            </p-cellEditor>\n        </td>\n        <td>{{device.createDate | date: 'medium'}}</td>\n        <td>{{device.updateDate}}</td>\n        <td style=\"text-align:center\">\n            <button *ngIf=\"!editing\" pButton pRipple type=\"button\" pInitEditableRow icon=\"pi pi-pencil\" (click)=\"onRowEditInit(device)\" class=\"p-button-rounded p-button-text\"></button>\n            <button *ngIf=\"editing\" pButton pRipple type=\"button\" pSaveEditableRow icon=\"pi pi-check\" (click)=\"onRowEditSave(device)\" class=\"p-button-rounded p-button-text p-button-success p-mr-2\"></button>\n            <button *ngIf=\"editing\" pButton pRipple type=\"button\" pCancelEditableRow icon=\"pi pi-times\" (click)=\"onRowEditCancel(device, ri)\" class=\"p-button-rounded p-button-text p-button-danger\"></button>\n        </td>\n\n      </tr>\n  </ng-template>\n</p-table>","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Device } from './device';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceService {\n\n  constructor(private http: HttpClient) {}\n  \n  getDevices(): Observable<Device[]> {\n    return this.http.get<Device[]>('http://localhost:8080/daan/rest/device/findAll');\n  }\n\n  updateDevice(device: Device): Observable<Device> {\n    return this.http.put<Device>('http://localhost:8080/daan/devices/' + device.id, device);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}